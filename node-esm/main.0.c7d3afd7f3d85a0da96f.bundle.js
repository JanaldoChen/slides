(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{151:function(e,n,o){o(152),o(385),e.exports=o(382)},369:function(e,n,o){var t={"./0-title.md":370,"./01-self-introduction.md":371,"./02-meta-intro.md":373,"./03-contents.md":375,"./04-esm.md":376,"./05-esm-node.md":378,"./06-summary.md":380,"./z-end.md":381};function s(e){var n=a(e);return o(n)}function a(e){if(!o.o(t,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return t[e]}s.keys=function(){return Object.keys(t)},s.resolve=a,e.exports=s,s.id=369},370:function(e,n){e.exports='\x3c!-- background: title --\x3e\n<h1 id="introduce-br-ecmascript-modules-br-of-node-js">Introduce <br /> ECMAScript modules <br /> of Node.js</h1>\n<p><br></p>\n<p><a href="https://github.com/hiroppy/slides">https://github.com/hiroppy/slides</a></p>\n'},371:function(e,n,o){e.exports='\x3c!-- background: japan --\x3e\n<h2 id="-me-">üòã ME üòô</h2>\n<p><br /></p>\n<div class="profile">\n  <div class="profile-left">\n    <img src="'+o(372)+'" alt="profile" class="profile-avatar">\n    <h4 class="profile-name">Yuta Hiroto</h4>\n    üáØüáµ üõ´ üáÆüá™\n    <br />\n    <div class="sns-list">\n      <a href="https://hiroppy.me" target="_blank">\n        <i class="fas fa-home"></i>\n      </a>\n      <a href="https://twitter.com/about_hiroppy" target="_blank">\n        <i class="fab fa-twitter"></i>\n      </a>\n      <a href="https://github.com/hiroppy" target="_blank">\n        <i class="fab fa-github"></i>\n      </a>\n      <a href="https://www.facebook.com/abouthiroppy" target="_blank">\n        <i class="fab fa-facebook"></i>\n      </a>\n    </div>\n    <br>\n    <a href="https://www.patreon.com/hiroppy">please support me!</a>\n  </div>\n  <div class="profile-right">\n    <h5>\n      <i class="fab fa-js"></i>\n      A Web engineer and Architect\n    </h5>\n    <h4>Working at</h4>\n    <p>Mercari, Inc. as a web technical advisor</p>\n    <h4>A member of</h4>\n    <p>Node.js</p>\n    <p>webpack</p>\n    <p>Babel</p>\n    <p>Gatsby</p>\n    <p>Stylelint</p>\n    <p>Node.js Japan User Group</p>\n  </div>\n</div>\n\n<p><a href="https://www.womanandhome.com/travel/best-time-to-visit-japan-55928/" class="ref-link">Why 2019 is the best year to visit Japan</a></p>\n'},372:function(e,n,o){e.exports=o.p+"376f5905f3a7df570bb7afff4c696a62.jpg"},373:function(e,n,o){e.exports='<h2 id="mercari">Mercari</h2>\n<p><img src="'+o(374)+'" /></p>\n'},374:function(e,n,o){e.exports=o.p+"961c33788e18b3f83148057303992a34.png"},375:function(e,n){e.exports='<h2 id="contents">Contents</h2>\n<p><br /></p>\n\x3c!-- contents --\x3e\n'},376:function(e,n,o){e.exports='\x3c!-- sectionTitle: What is ECMAScript Modules? --\x3e\n<h2 id="what-is-ecmascript-modules-">What is ECMAScript Modules?</h2>\n<hr>\n<pre><code class="lang-javascript">import defaultExport from &#39;module-name&#39;;\nimport * as name from &#39;module-name1&#39;;\nimport { name } from &#39;module-name2&#39;;\nimport { export as alias } from &#39;module-name&#39;;\nimport &#39;module-name&#39;;\n\nexport { name as name2 };\nexport let name1 = &#39;1&#39;, name2 = &#39;2&#39;;\nexport function FunctionName() {}\nexport class ClassName {}\n// ref:\n//   https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\n//   https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export\n</code></pre>\n<p><br /></p>\n<p><a href="https://whatwg.github.io/loader/">whatwg/loader</a><br><a href="https://tc39.github.io/ecma262/#sec-ecmascript-language-scripts-and-modules">ECMAScript Language: Scripts and Modules</a></p>\n<hr>\n<h2 id="browser-compatibility">Browser Compatibility</h2>\n<p><img src="'+o(377)+'" class="browser-compatibility" /></p>\n<p><a class="ref-link" href="https://caniuse.com/#search=modules">can I use modules</a></p>\n<hr>\n<h2 id="today">Today</h2>\n<p>omit now</p>\n'},377:function(e,n,o){e.exports=o.p+"95da57d23d38d365db9c50f7b29a840d.png"},378:function(e,n,o){e.exports='\x3c!-- sectionTitle: ESM in Node.js --\x3e\n<h2 id="esm-in-node-js">ESM in Node.js</h2>\n<p><br /></p>\n<p>Stability: 1<br>üë∑‚Äç the specifications may change in the future</p>\n<hr>\n<h2 id="standards">Standards</h2>\n<ul>\n<li>Spec compliance<ul>\n<li>always follow the ES spec</li>\n</ul>\n</li>\n<li>Browser equivalence<ul>\n<li>a code that executes in both environments should produce identical results</li>\n</ul>\n</li>\n<li>Don‚Äôt break CommonJS<ul>\n<li>cannot cause breaking changes with regards to CommonJS</li>\n</ul>\n</li>\n</ul>\n<p><br /></p>\n<p><a href="https://github.com/nodejs/modules">Node.js Foundation Modules Team</a></p>\n<hr>\n<h2 id="plan">Plan</h2>\n<p>add if time is not enough.</p>\n<hr>\n<h2 id="esm-s-path-conforms-to-whatwg-url">ESM&#39;s path conforms to whatwg url</h2>\n<pre><code class="lang-javascript">import &#39;./foo.js&#39;;\nimport &#39;file:///xxxx/foo.js&#39;;\n\n// dynamic import\n(async () =&gt; {\n  const baseURL = new URL(&#39;file://&#39;);\n  baseURL.pathname = `${process.cwd()}/foo.js`;\n\n  const foo = await import(baseURL);\n\n  console.log(foo); // [Module] { default: &#39;hello&#39; }\n})();\n</code></pre>\n<hr>\n<h2 id="invalid-variables">Invalid variables</h2>\n<pre><code class="lang-javascript">// The following variables don&#39;t exist in ESM.\nconsole.log(typeof require);\nconsole.log(typeof module);\nconsole.log(typeof exports);\nconsole.log(typeof __dirname);\nconsole.log(typeof __filename);\n\n// Substitutes ------------------------------------\n\n// Get a path info like __dirname and __filename.\nconsole.log(import.meta);\n// [Object: null prototype] {\n//   url: &#39;file:///Users/xxxx/index.js&#39;\n// }\n\n// Create `require` function.\nimport { createRequireFromPath } from &#39;module&#39;;\nimport { fileURLToPath } from &#39;url&#39;;\n\n// TODO: check\nconst requireFoo = createRequireFromPath(fileURLToPath(import.meta.url));\n\n// Require `./bar.js`.\nrequireFoo(&#39;./bar.js&#39;);\n</code></pre>\n<hr>\n<h2 id="cannot-load-esm-from-cjs">Cannot load ESM from CJS</h2>\n<pre><code class="lang-javascript">// // Reading ESM at top-level is prohibited.\n// import foo from &#39;./esm/foo.js&#39;; // invalid\n\n// // An error occurs because the read file is written as an ESM.\n// // `require` expects read file as CJS\n// require(&#39;./esm/foo&#39;);\n//\n// // export default typeof module !== &#39;undefined&#39; ? &#39;cjs&#39; : &#39;esm&#39;;\n// // ^^^^^^\n// // SyntaxError: Unexpected token export\n\nconsole.log(&#39;root.js:&#39;, typeof module !== &#39;undefined&#39; ? &#39;cjs&#39; : &#39;esm&#39;); // cjs\n\n(async () =&gt; {\n  const { default: foo } = await import(&#39;./esm/foo.js&#39;);\n  console.log(&#39;foo.js :&#39;, foo); // esm\n})();\n\n// Conclusion\n// üôÜ‚Äç‚ôÄÔ∏è ESM -&gt; CJS\n// üôÖ‚Äç‚ôÄÔ∏è CJS -&gt; ESM (excluding dynamic import)\n</code></pre>\n<hr>\n<h2 id="package-json-type-field">Package.json &quot;type&quot; field</h2>\n<p><br /></p>\n<p><img src="'+o(379)+'" /></p>\n<p><br />\nRefers to the closest parent&#39;s package.json.</p>\n<hr>\n<h2 id="package-json">package.json</h2>\n<pre><code class="lang-json">{\n  &quot;type&quot;: &quot;module&quot; // or `commonjs`, default is `commonjs`\n}\n</code></pre>\n<p>Basically, all node_modules don&#39;t have <code>type</code> field,<br>So they are read by CJS. Thus this change isn&#39;t breaking changes.</p>\n<hr>\n\x3c!-- prettier-ignore --\x3e\n<pre><code class="lang-javascript">/**\n‚îú‚îÄ‚îÄ esm\n‚îÇ   ‚îú‚îÄ‚îÄ cjs\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ index.js\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ package.json (commonjs is used because type is not specified)\n‚îÇ   ‚îî‚îÄ‚îÄ index.js\n‚îú‚îÄ‚îÄ package.json (type: module)\n‚îî‚îÄ‚îÄ root.js\n */\n// ./root.js -----------------------------------------------------------------1\nimport &#39;./esm/index.js&#39;;\nimport &#39;./esm/cjs/index.js&#39;;\nconsole.log(&#39;root.js          :&#39;, typeof module !== &#39;undefined&#39; ? &#39;cjs&#39; : &#39;esm&#39;); \n\n// ./esm/index.js ------------------------------------------------------------2\n// Refers to the closest parent&#39;s package.json.\nconsole.log(&#39;esm/index.js    :&#39;, typeof module !== &#39;undefined&#39; ? &#39;cjs&#39; : &#39;esm&#39;);\n\n// ./esm/cjs/index.js --------------------------------------------------------3\nconsole.log(&#39;esm/cjs/index.js:&#39;, typeof module !== &#39;undefined&#39; ? &#39;cjs&#39; : &#39;esm&#39;);\n</code></pre>\n<pre><code class="lang-shell">$ node --experimental-modules root.js\nesm/index.js    : esm # 2\nesm/cjs/index.js: cjs # 3\nroot.js         : esm # 1\n</code></pre>\n<hr>\n<h2 id="explicit-filenames">Explicit filenames</h2>\n<p><code>explicit</code> and <code>node</code> exist, the default is <code>explicit</code><br>since explicit file extensions are usually required on the Web.</p>\n<p><br /></p>\n<ul>\n<li>file extensions are mandatory in import statements</li>\n<li>cannot omit index.js</li>\n</ul>\n<p><br /></p>\n<pre><code class="lang-javascript">// strict/index.js\n\nimport &#39;./foo/index.js&#39;; // --es-module-specifier-resolution=explicit\nimport &#39;./foo&#39;; // --es-module-specifier-resolution=node\n</code></pre>\n<pre><code class="lang-sh">$ node --experimental-modules --es-module-specifier-resolution=node ./strict/index.js\n$ node --experimental-modules  ./strict/index.js # default is `explicit`\n</code></pre>\n<hr>\n<h2 id="-mjs-and-cjs"><code>.mjs</code> and <code>.cjs</code></h2>\n<p>All files follow the package.json type rules,<br>but there are cases where want to exclude certain files.</p>\n<p>By changing the file extension from <code>.js</code>,<br>it is possible to exclude the application of the rule.</p>\n<pre><code class="lang-javascript">// Always read as CJS\nimport &#39;./file.cjs&#39;;\n\n// Always read as ESM\nimport &#39;./file.mjs&#39;;\n</code></pre>\n'},379:function(e,n,o){e.exports=o.p+"5a91970af71426f2170bdc9d4a49e514.png"},380:function(e,n){e.exports="\x3c!-- ## Summary --\x3e\n"},381:function(e,n){e.exports='\x3c!-- background: end --\x3e\n<h1 id="the-end">The End</h1>\n<p><br /></p>\n<div class="sns-list sns-list-end">\n  <a href="https://hiroppy.me" target="_blank">\n    <i class="fas fa-home"></i>\n  </a>\n  <a href="https://twitter.com/about_hiroppy" target="_blank">\n    <i class="fab fa-twitter"></i>\n  </a>\n  <a href="https://github.com/hiroppy" target="_blank">\n    <i class="fab fa-github"></i>\n  </a>\n  <a href="https://www.facebook.com/abouthiroppy" target="_blank">\n    <i class="fab fa-facebook"></i>\n  </a>\n</div>\n'},383:function(e,n,o){var t=o(384);"string"==typeof t&&(t=[[e.i,t,""]]);var s={hmr:!0,transform:void 0,insertInto:void 0};o(54)(t,s);t.locals&&(e.exports=t.locals)},384:function(e,n,o){}},[[151,3,4]],[5]]);